---
layout: post
title:  "Свобода выбора"
date:   2014-01-31 22:00:00
categories: python php ruby haskell golang
---
Листая всякие бложики внезапно для себя обнаружил два проекта: <a href="https://www.silk.co/">Silk.co</a> и <a href="http://www.iron.io">Iron.io</a>. Что меня удивило ?
Да вроде бы ничего, на вид обычные проекты, но первый написан на Haskell, второй на Go.

Чуваки из Silk.co <a href="http://engineering.silk.co/post/31920990633/why-we-use-haskell">ясно дали понять</a> почему все таки Haskell. И за это им отдельный респект, в
любом случае это как минимум смело. Ведь пилить стартапы у многих принято на Ruby on Rails или Node.JS сейчас, потому что это модно и по-хипстерски. Тут ребята взялись писать
бэкэнд на хаскеле, учитывая то что для многих это всего лишь академический язык программирования.

По поводу второго проекта Iron.io ребята уже более 2х лет успешно работают с Go. И это тоже смело! По теме кстати есть <a href="http://habrahabr.ru/post/195464/">пруф с хабра</a> если что.
Я сам давно уже присматриваюсь к Go, периодически собираю его свежий билд у себя на компе :) Когда первый раз увидел как на нем легко пишется REST сервис, сидел в шоке на стуле пару минут.
А чего только стоят его goroutine это вообще тема отдельной статьи. Их много кто пытается сравнить с асинхронным выполнений операций в Node.JS, но все мимо. При работе с Node.JS мы имеем один поток,
асинхронное выполнение и callback hell. Все. В Go callback hell нет :) Еще один жирный плюс или минус это легкость деплоя Go приложений. По сути мы тащим один бинарный файл и все. Многие вспомнят Facebook с их HHVM :)

Это все вообще к чему. А к тому что уже давно пора использовать инструменты, которые помогают качественно решать задачу на нормальном железе. Времена одноядерных процессоров прошли, или вы проспали ?)
Ваши текущие проекты нормально масштабируются ? :)
